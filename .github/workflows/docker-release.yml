name: Docker Release

on:
  push:
    tags:
      - 'v*'  # 匹配所有以v开头的tag，如v1.0.0, v1.2.3等

env:
  REGISTRY: docker.io
  IMAGE_NAME: graydovee/netbouncer

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整的git历史

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern=v{{version}}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate Release Notes
        id: release_notes
        run: |
          # 获取当前tag名称
          TAG_NAME=${GITHUB_REF#refs/tags/}
          
          # 获取上一个tag（如果存在）
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          
          # 生成release notes
          if [ -n "$PREVIOUS_TAG" ]; then
            # 如果有上一个tag，获取从上一个tag到当前tag的commit
            COMMITS=$(git log --pretty=format:"- %s (%h) - %an" $PREVIOUS_TAG..$TAG_NAME)
            RELEASE_NOTES="## 版本 $TAG_NAME 更新内容\n\n### 提交记录\n\n$COMMITS"
          else
            # 如果是第一个tag，获取所有commit
            COMMITS=$(git log --pretty=format:"- %s (%h) - %an" --reverse)
            RELEASE_NOTES="## 版本 $TAG_NAME 更新内容\n\n### 提交记录\n\n$COMMITS"
          fi
          
          # 设置输出变量
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.release_notes.outputs.notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
